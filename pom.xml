<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.Trabajo_new</groupId>
	<artifactId>Trabajo_new</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Trabajo</name>
	<pluginRepositories>
		<pluginRepository>
			<id>mulesoft-releases</id>
			<name>MuleSoft Snapshots Repository</name>
			<url>https://repository.mulesoft.org/releases/</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>google-api-services</id>
			<url>http://google-api-client-libraries.appspot.com/mavenrepo</url>
		</repository>


	</repositories>

	<properties>
		<junit.version>4.12</junit.version>
		<slf4jVersion>1.7.12</slf4jVersion>
		<log4j.version>2.4.1</log4j.version>
		<jackson-2-version>2.9.3</jackson-2-version>
	</properties>

	<build>
		<finalName>Trabajo</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.raml.plugins</groupId>
				<artifactId>raml-jaxrs-maven-plugin</artifactId>
				<version>1.3.2</version>
				<configuration>
					<!-- Use sourcePaths if you want to provide a single RAML file or a 
						list of RAML files -->
					<sourceDirectory>src/main/webapp/api-files</sourceDirectory>
					<!-- Optionally configure outputDirectory if you don't like the default 
						value: ${project.build.directory}/generated-sources/raml-jaxrs -->
					<!-- Replace with your package name -->
					<basePackageName>com.trabajo</basePackageName>
					<!-- Valid values: 1.1 2.0 -->
					<jaxrsVersion>2.0</jaxrsVersion>
					<useJsr303Annotations>false</useJsr303Annotations>
					<!-- Valid values: jackson1 jackson2 gson none -->
					<jsonMapper>jackson2</jsonMapper>
					<removeOldOutput>true</removeOldOutput>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<wtpContextName>${project.build.finalName}</wtpContextName>
					<wtpversion>2.0</wtpversion>
					<useProjectReferences>true</useProjectReferences>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.16</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopPort>9966</stopPort>
					<stopKey>stop</stopKey>
					<webAppConfig>
						<contextPath>/${project.build.finalName}</contextPath>
					</webAppConfig>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/integration/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<includes>
						<include>**/unit/*.java</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<!--&lt;!&ndash; https://mvnrepository.com/artifact/com.h2database/h2 &ndash;&gt;-->
		<!--<dependency>-->
			<!--<groupId></groupId>-->
			<!--<artifactId>h2</artifactId>-->
			<!--<version>1.3.176</version>-->
		<!--</dependency>-->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.45</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4jVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4jVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>                        <!-- Java Server Pages -->
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>                        <!-- JSP standard tag library -->
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>                        <!-- Google API client - for stuff that's not in gcloud -->
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>1.23.0</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>                        <!-- Google+ API Client Library for Java -->
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-plus</artifactId>
			<version>v1-rev531-1.23.0</version>
		</dependency>


		<!-- core library -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>3.0.7.Final</version>
		</dependency>

		<!-- optional modules -->
		<!-- JAXB support -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>3.0.7.Final</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		<!-- Just the annotations; use this dependency if you want to attach annotations 
			to classes without connecting them to the code. -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<!-- https://github.com/FasterXML/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<!-- Google Core Libraries for Java -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>  <!-- https://github.com/google/guava/wiki -->
			<version>23.0</version>
		</dependency>


		<!-- from restassured website: You should place rest-assured before JUnit 
			in your pom.xml dependency declaration in order to make sure that the correct 
			version of Hamcrest is used. -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
		<!-- from restassured website: If you want to validate that a JSON response 
			conforms to a Json Schema you can use the json-schema-validator module: -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>

		<!-- SQL LOGGING -->
		<dependency>
			<groupId>com.googlecode.usc</groupId>
			<artifactId>jdbcdslog</artifactId>
			<version>1.0.6.2</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
		</dependency>

		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1</artifactId>
			<version>6.1.14</version>
		</dependency>


	</dependencies>

</project>